name: Generate BIOS Report

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  generate-report:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        pip install requests

    - name: Authenticate and fetch data
      env:
        SATKER: 677571
        KEY: FrQMYUQIlqVciSubILZU4r2ijOWH1Eer
      run: |
        python << EOF
        import os
        import requests
        from html import escape

        # Autentikasi
        login_url = "https://training-bios2.kemenkeu.go.id/api/token"
        response = requests.post(
            login_url,
            data={"satker": os.environ['SATKER'], "key": os.environ['KEY']}
        )
        token = response.json().get('token')

        if not token:
            raise Exception("Gagal mendapatkan token")

        # Daftar endpoint
        endpoints = [
            "https://training-bios2.kemenkeu.go.id/api/get/data/keuangan/akuntansi/penerimaan",
            "https://training-bios2.kemenkeu.go.id/api/get/data/keuangan/akuntansi/pengeluaran",
            "https://training-bios2.kemenkeu.go.id/api/get/data/keuangan/saldo/saldo_operasional",
            "https://training-bios2.kemenkeu.go.id/api/get/data/keuangan/saldo/saldo_pengelolaan_kas",
            "https://training-bios2.kemenkeu.go.id/api/get/data/keuangan/saldo/saldo_dana_kelolaan",
            "https://training-bios2.kemenkeu.go.id/api/get/data/pendidikan/sdm/jumlah_tenaga_pendidik_ptn",
            "https://training-bios2.kemenkeu.go.id/api/get/data/pendidikan/sdm/jumlah_tenaga_kependidikan"
        ]

        # Membuat HTML
        html_content = '''
        <html>
            <head>
                <title>Laporan BIOS</title>
                <style>
                    table {border-collapse: collapse; width: 100%; margin: 20px 0;}
                    th, td {border: 1px solid #ddd; padding: 8px; text-align: left;}
                    th {background-color: #f2f2f2;}
                    tr:nth-child(even) {background-color: #f9f9f9;}
                </style>
            </head>
            <body>
                <h1>Laporan BIOS</h1>
        '''

        # Ambil data dari setiap endpoint
        for url in endpoints:
            response = requests.get(url, headers={"Authorization": f"Bearer {token}"})
            data = response.json()
            
            html_content += f'<h2>{url.split("/")[-1].replace("_", " ").title()}</h2>'
            html_content += '<table>'
            for key, value in data.items():
                html_content += f'''
                <tr>
                    <td><strong>{escape(str(key))}</strong></td>
                    <td>{escape(str(value))}</td>
                </tr>
                '''
            html_content += '</table>'

        html_content += '</body></html>'

        with open('laporan.html', 'w') as f:
            f.write(html_content)
        EOF

    - name: Commit and push changes
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add laporan.html
        git commit -m "Update laporan $(date +'%Y-%m-%d %H:%M:%S')"
        git push
