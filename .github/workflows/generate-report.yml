name: Generate BIOS Report

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Jadwalkan untuk dijalankan setiap hari pada tengah malam

jobs:
  generate-report:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Authenticate and fetch data
      env:
        SATKER: 677571
        KEY: FrQMYUQIlqVciSubILZU4r2ijOWH1Eer
      run: |
        import requests
        import os

        # URL dan parameter untuk login
        login_url = "https://training-bios2.kemenkeu.go.id/api/token"
        payload = {
            "satker": os.getenv("SATKER"),
            "key": os.getenv("KEY")
        }

        # Melakukan POST request untuk mendapatkan token
        response = requests.post(login_url, data=payload)
        token = response.json().get("token")

        if not token:
            raise Exception("Gagal mendapatkan token")

        # Endpoints untuk mengambil data
        endpoints = [
            "https://training-bios2.kemenkeu.go.id/api/get/data/keuangan/akuntansi/penerimaan",
            "https://training-bios2.kemenkeu.go.id/api/get/data/keuangan/akuntansi/pengeluaran",
            "https://training-bios2.kemenkeu.go.id/api/get/data/keuangan/saldo/saldo_operasional",
            "https://training-bios2.kemenkeu.go.id/api/get/data/keuangan/saldo/saldo_pengelolaan_kas",
            "https://training-bios2.kemenkeu.go.id/api/get/data/keuangan/saldo/saldo_dana_kelolaan",
            "https://training-bios2.kemenkeu.go.id/api/get/data/pendidikan/sdm/jumlah_tenaga_pendidik_ptn",
            "https://training-bios2.kemenkeu.go.id/api/get/data/pendidikan/sdm/jumlah_tenaga_kependidikan"
        ]

        # Mengambil data dari setiap endpoint
        data = {}
        for endpoint in endpoints:
            response = requests.get(endpoint, headers={"Authorization": f"Bearer {token}"})
            data[endpoint] = response.json()

        # Membuat file HTML
        html_content = "<html><body><h1>Laporan BIOS</h1><table border='1'>"
        for endpoint, result in data.items():
            html_content += f"<tr><th colspan='2'>{endpoint}</th></tr>"
            for key, value in result.items():
                html_content += f"<tr><td>{key}</td><td>{value}</td></tr>"
        html_content += "</table></body></html>"

        with open("laporan.html", "w") as file:
            file.write(html_content)

    - name: Commit and push changes
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add laporan.html
        git commit -m "Update laporan.html"
        git push
